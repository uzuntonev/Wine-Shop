{"version":3,"sources":["components/Cart/Quantity.jsx","components/products/Details/TableDetails.jsx","components/products/Details/Details.jsx"],"names":["useStyles","makeStyles","theme","input","background","border","marginLeft","Quantity","product","count","setCount","classes","dispatch","useContext","StoreContext","handleChange","useCallback","e","updateQuantitySuccess","value","target","changeQuantity","action","element","document","getElementById","_id","increase","decrease","handler","icon","className","id","size","productQuantityCart","onChange","title","fontWeight","dash","fontSize","paddingRight","paddingLeft","color","palette","primary","text","fontStyle","TableDetails","year","type","alcohol","header","subheader","container","padding","paddingBottom","paddingTop","price","btnSubmit","display","width","Details","state","params","useParams","useState","setProduct","useEffect","productId","productService","getProductById","then","data","addToCartHandler","addToCart","cloudName","Grid","justify","item","xs","publicId","imageUrl","fetch-format","quality","height","loading","Container","fixed","name","content","description","SubmitButton","onClick","Loader"],"mappings":"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","file":"static/js/8.717a37e4.chunk.js","sourcesContent":["import React, { Fragment, useContext, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { StoreContext } from '../../store/store';\r\nimport { updateQuantitySuccess } from '../../store/actions';\r\nimport IconButton from '../buttons/IconButton/IconButton';\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    background: 'transparent',\r\n    border: 'none',\r\n    marginLeft: 20,\r\n  },\r\n}));\r\nconst Quantity = ({ product, count, setCount }) => {\r\n  const classes = useStyles();\r\n  const { dispatch } = useContext(StoreContext);\r\n\r\n  const handleChange = useCallback(\r\n    (e, product) => {\r\n      dispatch(updateQuantitySuccess({ product, value: +e.target.value }));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const changeQuantity = (e, action, product) => {\r\n    const element = document.getElementById(product._id);\r\n    const mapAction = {\r\n      increase: () => {\r\n        if (!!count) {\r\n          setCount(+element.value + 1);\r\n        } else {\r\n          dispatch(\r\n            updateQuantitySuccess({\r\n              product,\r\n              value: +element.value + 1,\r\n            })\r\n          );\r\n        }\r\n      },\r\n      decrease: () => {\r\n        if (!!count) {\r\n          setCount(+element.value - 1 <= 0 ? 0 : +element.value - 1);\r\n        } else {\r\n          dispatch(\r\n            updateQuantitySuccess({\r\n              product,\r\n              value: +element.value - 1 <= 0 ? 0 : +element.value - 1,\r\n            })\r\n          );\r\n        }\r\n      },\r\n    };\r\n    mapAction[action]();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        handler={(e) => changeQuantity(e, 'decrease', product)}\r\n        icon=\"remove\"\r\n      />\r\n      <input\r\n        className={classes.input}\r\n        id={product._id}\r\n        size=\"4\"\r\n        value={!!count ? count : product.productQuantityCart}\r\n        onChange={(e) => handleChange(e, product)}\r\n      />\r\n      <IconButton\r\n        handler={(e) => changeQuantity(e, 'increase', product)}\r\n        icon=\"add\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nQuantity.propTypes = {\r\n  product: PropTypes.object,\r\n};\r\n\r\nexport default Quantity;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    title: {\r\n      fontWeight: 700,\r\n    },\r\n    dash: {\r\n      fontSize: 50,\r\n      paddingRight: 20,\r\n      paddingLeft: 20,\r\n      color: theme.palette.primary.text,\r\n    },\r\n    value: {\r\n        fontStyle: 'italic'\r\n    }\r\n  };\r\n});\r\n\r\nconst TableDetails = ({ product }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td className={classes.title}>Реколта</td>\r\n          <td className={classes.dash}>-</td>\r\n          <td className={classes.value}>{product.year}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className={classes.title}>Вид</td>\r\n          <td className={classes.dash}>-</td>\r\n          <td className={classes.value}>{product.type}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className={classes.title}>Обем</td>\r\n          <td className={classes.dash}>-</td>\r\n          <td className={classes.value}>{product.size}мл.</td>\r\n        </tr>\r\n        <tr>\r\n          <td className={classes.title}>Алкохол</td>\r\n          <td className={classes.dash}>-</td>\r\n          <td className={classes.value}>{product.alcohol}%</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableDetails;\r\n","import React, { useEffect, useState, useCallback, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Image, CloudinaryContext } from 'cloudinary-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Container } from '@material-ui/core/';\r\nimport { addToCart } from '../../../store/actions';\r\nimport productService from '../../../services/product-service';\r\nimport Quantity from '../../Cart/Quantity';\r\nimport SubmitButton from '../../buttons/SubmitButton/SubmitButton';\r\nimport TableDetails from './TableDetails';\r\nimport Loader from '../../common/Loader/Loader';\r\nimport { StoreContext } from '../../../store/store';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    header: {\r\n      fontSize: '40px',\r\n      fontWeight: 'bold',\r\n    },\r\n    subheader: {\r\n      fontSize: '28px',\r\n      color: theme.palette.primary.text,\r\n    },\r\n    container: {\r\n      padding: '50px',\r\n      paddingBottom: '400px',\r\n      paddingTop: '100px',\r\n    },\r\n    price: {\r\n      fontSize: '45px',\r\n    },\r\n    btnSubmit: {\r\n      display: 'inline-block',\r\n      marginLeft: '20px',\r\n      width: '100px',\r\n    },\r\n  };\r\n});\r\n\r\nconst Details = () => {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = useContext(StoreContext);\r\n  const params = useParams();\r\n  const [product, setProduct] = useState();\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const { id: productId } = params;\r\n    productService.getProductById(productId).then(({ data }) => {\r\n      setProduct(data[0]);\r\n    });\r\n  }, [params]);\r\n\r\n  const addToCartHandler = useCallback(\r\n    (product, count) => {\r\n        dispatch(addToCart(product, count));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  if (!product) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <CloudinaryContext cloudName=\"dfyamkucg\">\r\n      <Grid container justify=\"center\" >\r\n        <Grid item xs={5}>\r\n          <Image\r\n            publicId={product.imageUrl}\r\n            fetch-format=\"auto\"\r\n            quality=\"auto\"\r\n            height=\"600\"\r\n            width=\"600\"\r\n            loading=\"lazy\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <Container fixed className={classes.container}>\r\n            <p className={classes.subheader}>{product.year}</p>\r\n            <p className={classes.header}>{product.name}</p>\r\n            <p className={classes.content}>{product.description}</p>\r\n            <p className={classes.price}>{product.price}лв.</p>\r\n            <Quantity product={product} count={count} setCount={setCount} />\r\n            <div className={classes.btnSubmit}>\r\n              <SubmitButton title={'Купи'} onClick={() => addToCartHandler(product, count)} />\r\n            </div>\r\n            <TableDetails product={product}/>\r\n          </Container>\r\n        </Grid>\r\n      </Grid>\r\n    </CloudinaryContext>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"sourceRoot":""}