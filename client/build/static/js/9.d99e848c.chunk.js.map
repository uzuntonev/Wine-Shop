{"version":3,"sources":["components/forms/TextareaField.jsx","components/forms/LayoutFieldsProduct.jsx","services/cloudinary-service.js","components/products/Card/Top.jsx","components/forms/EditProduct/EditDialog.jsx","components/products/Card/AuthorizedActions.jsx","components/products/Card/UnauthorizedActions.jsx","components/products/Card/Bottom.jsx","components/products/Card/Card.jsx","components/products/List/List.jsx"],"names":["useStyles","makeStyles","theme","textarea","resize","error","color","fontSize","marginLeft","marginTop","TextareaField","cols","rows","label","name","handleChange","runControlValidation","formState","classes","TextareaAutosize","className","placeholder","id","onChange","onBlur","value","form","errors","LayoutProduct","changeHandlerFactory","image","setImage","handleOnChangeName","handleOnChangeYear","handleOnChangeType","handleOnChangeAlcohol","handleOnChangeSize","handleOnChangePrice","handleOnChangeDescription","handleOnChangeQuantity","beginUpload","tag","options","callback","scOptions","Util","withSnakeCaseKeys","window","cloudinary","openUploadWidget","cloudName","tags","uploadPreset","photos","event","info","public_id","Grid","container","spacing","item","xs","InputField","changeHandler","htmlFor","IconButton","attr","component","handler","icon","htmlColor","media","width","padding","imageCard","marginBottom","borderRadius","imageActionArea","display","justifyContent","border","palette","primary","text","Top","product","Card","NavLink","to","_id","CardActionArea","publicId","imageUrl","fetch-format","quality","height","loading","closeIcon","float","schema","yup","shape","min","required","year","type","alcohol","price","size","description","withForm","props","handleClose","open","runValidations","formIsInvalid","useState","useEffect","Object","assign","handleSubmit","useCallback","e","preventDefault","then","formData","productService","updateProduct","catch","console","log","Dialog","onClose","aria-labelledby","onSubmit","DialogTitle","Typography","DialogContent","CssBaseline","LayoutFieldsProduct","DialogActions","SubmitButton","disabled","title","actionButtons","AuthorizeActions","dispatch","useContext","StoreContext","setOpen","history","useHistory","handleClickOpen","push","location","pathname","goBack","handleDelete","deleteProduct","CardActions","UnauthorizeActions","addToCartHandler","addToCart","row","alignItems","cardInfo","Bottom","state","CardContent","isAuth","AuthorizedActions","UnauthorizedActions","ProductCard","root","alignSelf","paddingLeft","margin","List","useRouteMatch","useLocation","getUserProducts","getProducts","products","length","renderProducts","map","key"],"mappings":"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","file":"static/js/9.d99e848c.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextareaAutosize } from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textarea: {\r\n    resize: 'none',\r\n  },\r\n  error: {\r\n    color: '#f44336',\r\n    fontSize: 12,\r\n    marginLeft: 14,\r\n    marginTop: 0,\r\n  },\r\n}));\r\n\r\nconst TextareaField = ({\r\n  cols,\r\n  rows,\r\n  label,\r\n  name,\r\n  handleChange,\r\n  runControlValidation,\r\n  formState,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <TextareaAutosize\r\n        cols={cols}\r\n        rows={rows}\r\n        className={classes.textarea}\r\n        placeholder={label}\r\n        id={name}\r\n        onChange={handleChange}\r\n        onBlur={runControlValidation(name)}\r\n        value={formState.form[name]}\r\n      />\r\n      {formState.errors && formState.errors[name] ? (\r\n        <p className={classes.error}>{formState.errors[name]}</p>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nTextareaField.propTypes = {\r\n  cols: PropTypes.number,\r\n  rows: PropTypes.number,\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  runControlValidation: PropTypes.func,\r\n  formState: PropTypes.object,\r\n};\r\n\r\nexport default TextareaField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@material-ui/core/';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { openUploadWidget } from '../../services/cloudinary-service';\r\nimport IconButton from '../buttons/IconButton/IconButton';\r\nimport InputField from './InputField';\r\nimport TextareaField from './TextareaField';\r\n\r\nconst LayoutProduct = ({\r\n  changeHandlerFactory,\r\n  runControlValidation,\r\n  formState,\r\n  image,\r\n  setImage,\r\n}) => {\r\n  const handleOnChangeName = changeHandlerFactory('name');\r\n  const handleOnChangeYear = changeHandlerFactory('year');\r\n  const handleOnChangeType = changeHandlerFactory('type');\r\n  const handleOnChangeAlcohol = changeHandlerFactory('alcohol');\r\n  const handleOnChangeSize = changeHandlerFactory('size');\r\n  const handleOnChangePrice = changeHandlerFactory('price');\r\n  const handleOnChangeDescription = changeHandlerFactory('description');\r\n  const handleOnChangeQuantity = changeHandlerFactory('quantity');\r\n\r\n  const beginUpload = (tag) => {\r\n    const uploadOptions = {\r\n      cloudName: 'dfyamkucg',\r\n      tags: [tag, 'anImage'],\r\n      uploadPreset: 'upload',\r\n    };\r\n    openUploadWidget(uploadOptions, (error, photos) => {\r\n      if (!error) {\r\n        // console.log(photos);\r\n        if (photos.event === 'success') {\r\n          // setImages([...images, photos.info.public_id]);\r\n          setImage(photos.info.public_id);\r\n        }\r\n      } else {\r\n        // console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <InputField\r\n          label={'Наименование'}\r\n          name={'name'}\r\n          changeHandler={handleOnChangeName}\r\n          runControlValidation={runControlValidation}\r\n          formState={formState}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputField\r\n          label={'Реколта'}\r\n          name={'year'}\r\n          changeHandler={handleOnChangeYear}\r\n          runControlValidation={runControlValidation}\r\n          formState={formState}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputField\r\n          label={'Вид'}\r\n          name={'type'}\r\n          changeHandler={handleOnChangeType}\r\n          runControlValidation={runControlValidation}\r\n          formState={formState}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputField\r\n          label={'Размер'}\r\n          name={'size'}\r\n          changeHandler={handleOnChangeSize}\r\n          runControlValidation={runControlValidation}\r\n          formState={formState}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputField\r\n          label={'Алкохол'}\r\n          name={'alcohol'}\r\n          changeHandler={handleOnChangeAlcohol}\r\n          runControlValidation={runControlValidation}\r\n          formState={formState}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <InputField\r\n          label={'Цена'}\r\n          name={'price'}\r\n          changeHandler={handleOnChangePrice}\r\n          runControlValidation={runControlValidation}\r\n          formState={formState}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <InputField\r\n          label={'Количество'}\r\n          name={'quantity'}\r\n          changeHandler={handleOnChangeQuantity}\r\n          runControlValidation={runControlValidation}\r\n          formState={formState}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <label htmlFor=\"icon-button-file\">\r\n          Прикачи снимка\r\n          <IconButton\r\n            attr={{\r\n              color: 'primary',\r\n              'aria-label': 'upload picture',\r\n              component: 'span',\r\n            }}\r\n            handler={() => beginUpload('image')}\r\n            icon=\"camera\"\r\n          />\r\n        </label>\r\n        {image ? <CheckCircleIcon htmlColor={'green'} /> : null}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextareaField\r\n          cols={45}\r\n          rows={10}\r\n          label={'Описание'}\r\n          name={'description'}\r\n          handleChange={handleOnChangeDescription}\r\n          formState={formState}\r\n          runControlValidation={runControlValidation}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nLayoutProduct.propTypes = {\r\n  changeHandlerFactory: PropTypes.func,\r\n  formState: PropTypes.object,\r\n  runValidations: PropTypes.func,\r\n  runControlValidation: PropTypes.func,\r\n  formIsInvalid: PropTypes.func,\r\n  history: PropTypes.object,\r\n  image: PropTypes.string,\r\n  setImage: PropTypes.func,\r\n};\r\n\r\nexport default LayoutProduct;\r\n","import { Cloudinary as CoreCloudinary, Util } from 'cloudinary-core';\r\nimport axios from 'axios';\r\n\r\nexport const url = (publicId, options) => {\r\n  const scOptions = Util.withSnakeCaseKeys(options);\r\n  const cl = CoreCloudinary.new();\r\n  return cl.url(publicId, scOptions);\r\n};\r\n\r\nexport const openUploadWidget = (options, callback) => {\r\n  const scOptions = Util.withSnakeCaseKeys(options);\r\n  window.cloudinary.openUploadWidget(scOptions, callback);\r\n};\r\n\r\nexport async function fetchPhotos(imageTag, setter) {\r\n  const options = {\r\n    cloudName: 'dfyamkucg',\r\n    format: 'json',\r\n    type: 'list',\r\n    version: Math.ceil(new Date().getTime() / 1000),\r\n  };\r\n\r\n  const urlPath = url(imageTag.toString(), options);\r\n\r\n  axios(urlPath)\r\n    .then(({ data: text }) =>\r\n      text\r\n        ? setter(JSON.parse(text).resources.map((image) => image.public_id))\r\n        : []\r\n    )\r\n    .catch((err) => console.log(err));\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Image } from 'cloudinary-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardActionArea } from '@material-ui/core';\r\nimport NavLink from '../../NavLink/NavLink';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    media: {\r\n      width: 240,\r\n      padding: 15,\r\n    },\r\n    imageCard: {\r\n      marginBottom: 10,\r\n      padding: 0,\r\n      borderRadius: '20px',\r\n    },\r\n    imageActionArea: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      border: `solid 1px ${theme.palette.primary.text}`,\r\n      borderRadius: '20px',\r\n    },\r\n  };\r\n});\r\nconst Top = ({ product }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.imageCard}>\r\n      <NavLink to={`details/${product._id}`}>\r\n        <CardActionArea\r\n          className={classes.imageActionArea}>\r\n          <Image\r\n            className={classes.media}\r\n            publicId={product.imageUrl}\r\n            fetch-format=\"auto\"\r\n            quality=\"auto\"\r\n            height=\"300\"\r\n            width=\"150\"\r\n            loading=\"lazy\"\r\n          />\r\n        </CardActionArea>\r\n      </NavLink>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTop.propTypes = {\r\n  product: PropTypes.object,\r\n};\r\n\r\nexport default Top;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as yup from 'yup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  CssBaseline,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core/';\r\nimport withForm from '../../../hocs/withForm';\r\nimport SubmitButton from '../../buttons/SubmitButton/SubmitButton';\r\nimport IconButton from '../../buttons/IconButton/IconButton';\r\nimport LayoutFieldsProduct from '../LayoutFieldsProduct';\r\nimport productService from '../../../services/product-service'\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  closeIcon: {\r\n    float: 'right',\r\n  },\r\n}));\r\nconst EditDialog = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    handleClose,\r\n    open,\r\n    formState,\r\n    runValidations,\r\n    formIsInvalid,\r\n    product,\r\n  } = props;\r\n  const [image, setImage] = useState();\r\n\r\n  useEffect(() => {\r\n    Object.assign(formState.form, { ...formState.form, ...product });\r\n  }, [product]);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      runValidations().then((formData) => {\r\n        const product = {\r\n          ...formData,\r\n          imageUrl: image,\r\n        };\r\n\r\n        productService\r\n          .updateProduct(product)\r\n          .then(() => {\r\n            handleClose();\r\n          })\r\n          .catch((error) => {console.log(error)});\r\n      });\r\n    },\r\n    [runValidations, image, handleClose]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Редактиране продукт\r\n          <Typography component=\"div\" className={classes.closeIcon}>\r\n            <IconButton handler={handleClose} icon={'close'} />\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <CssBaseline />\r\n          <LayoutFieldsProduct {...props} image={image} setImage={setImage} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <SubmitButton disabled={formIsInvalid()} title={'Редактиране'} />\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .min(5, 'Name must be at least 5 characters')\r\n    .required('Product name is required'),\r\n  year: yup.string().required('Year is required'),\r\n  type: yup.string().required('Type name is required'),\r\n  alcohol: yup.string().required('Alcohol name is required'),\r\n  price: yup.string().required('Price is required'),\r\n  size: yup.string().required('Size is required'),\r\n  description: yup.string().required('Description is required'),\r\n});\r\n\r\nconst initialState = {\r\n  name: '',\r\n  year: '',\r\n  type: '',\r\n  alcohol: '',\r\n  size: '',\r\n  price: '',\r\n  description: '',\r\n};\r\n\r\nEditDialog.propTypes = {\r\n  changeHandlerFactory: PropTypes.func,\r\n  formState: PropTypes.object,\r\n  runValidations: PropTypes.func,\r\n  runControlValidation: PropTypes.func,\r\n  formIsInvalid: PropTypes.func,\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default withForm(EditDialog, initialState, schema);\r\n","import React, { Fragment, useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CardActions } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '../../buttons/IconButton/IconButton';\r\nimport EditDialog from '../../forms/EditProduct/EditDialog';\r\nimport { useContext } from 'react';\r\nimport { StoreContext } from '../../../store/store';\r\nimport { deleteProduct } from '../../../store/actions';\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    actionButtons: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  };\r\n});\r\n\r\nconst AuthorizeActions = ({ product }) => {\r\n  const classes = useStyles();\r\n  const { dispatch } = useContext(StoreContext);\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleClickOpen = useCallback(() => {\r\n    history.push(`${history.location.pathname}/edit/${product._id}`);\r\n    setOpen(true);\r\n  }, [history, product._id]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    history.goBack();\r\n    setOpen(false);\r\n  }, [history]);\r\n\r\n  const handleDelete = useCallback(() => {\r\n    dispatch(deleteProduct(product._id));\r\n    history.push(`/my-products`);\r\n  }, [dispatch, product._id, history]);\r\n  return (\r\n    <Fragment>\r\n      <CardActions className={classes.actionButtons}>\r\n        <IconButton\r\n          handler={handleClickOpen}\r\n          icon=\"edit\"\r\n          attr={{ size: 'small', color: 'inherit' }}\r\n        />\r\n        <IconButton\r\n          handler={handleDelete}\r\n          icon=\"delete\"\r\n          attr={{ size: 'small', color: 'inherit' }}\r\n        />\r\n      </CardActions>\r\n\r\n      {open ? (\r\n        <EditDialog handleClose={handleClose} open={open} product={product} />\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthorizeActions;\r\n","import React, { useCallback, useContext } from 'react';\r\nimport { CardActions } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NavLink from '../../NavLink/NavLink';\r\nimport IconButton from '../../buttons/IconButton/IconButton';\r\nimport { addToCart } from '../../../store/actions';\r\nimport { StoreContext } from '../../../store/store';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    actionButtons: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  };\r\n});\r\n\r\nconst UnauthorizeActions = ({ product }) => {\r\n  const classes = useStyles();\r\n  const { dispatch } = useContext(StoreContext);\r\n\r\n  const addToCartHandler = useCallback(\r\n    (product) => {\r\n      dispatch(addToCart(product));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <CardActions className={classes.actionButtons}>\r\n      <IconButton\r\n        attr={{ size: 'small', color: 'primary' }}\r\n        handler={() => addToCartHandler(product)}\r\n        icon=\"cart\"\r\n      >\r\n        Купи\r\n      </IconButton>\r\n\r\n      <NavLink to={`details/${product._id}`}>\r\n        <IconButton attr={{ size: 'small', color: 'primary' }} icon=\"more\" />\r\n      </NavLink>\r\n    </CardActions>\r\n  );\r\n};\r\n\r\nexport default UnauthorizeActions;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport { StoreContext } from '../../../store/store';\r\nimport AuthorizedActions from './AuthorizedActions';\r\nimport UnauthorizedActions from './UnauthorizedActions';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    row: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    cardInfo: {\r\n      border: `solid 1px ${theme.palette.primary.text}`,\r\n      borderRadius: '20px',\r\n    },\r\n  };\r\n});\r\nconst Bottom = ({ product }) => {\r\n  const classes = useStyles();\r\n  const { state } = useContext(StoreContext);\r\n\r\n  return (\r\n    <Card className={classes.cardInfo}>\r\n      <CardContent>\r\n        <div className={classes.row}>\r\n          <h3>Реколта</h3>\r\n          <span>{product.year}</span>\r\n        </div>\r\n        <div className={classes.row}>\r\n          <h3>Цена</h3>\r\n          <span>{product.price}лв</span>\r\n        </div>\r\n      </CardContent>\r\n      {state.isAuth ? (\r\n        <AuthorizedActions product={product} />\r\n      ) : (\r\n        <UnauthorizedActions product={product} />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nBottom.propTypes = {\r\n  product: PropTypes.object,\r\n};\r\n\r\nexport default Bottom;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CardTop from './Top';\r\nimport CardBottom from './Bottom';\r\n\r\nconst ProductCard = ({ product }) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <CardTop product={product} />\r\n      <CardBottom product={product} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  product: PropTypes.object,\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { CloudinaryContext } from 'cloudinary-react';\r\nimport { StoreContext } from '../../../store/store';\r\nimport { getUserProducts, getProducts, getProductsSuccess, getUserProductsSuccess } from '../../../store/actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '../Card/Card';\r\nimport { Grid } from '@material-ui/core';\r\nimport productService from '../../../services/product-service';\r\nimport { useRouteMatch, useLocation } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      padding: 20,\r\n      alignSelf: 'center',\r\n      paddingLeft: 150,\r\n      marginBottom: theme.spacing(12),\r\n    },\r\n    item: {\r\n      margin: 20,\r\n    },\r\n  };\r\n});\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const match = useRouteMatch();\r\n  const location = useLocation();\r\n  const { state, dispatch } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    if (state.isAuth) {\r\n      dispatch(getUserProducts());\r\n    } else {\r\n      dispatch(getProducts());\r\n    }\r\n  }, [location.pathname, state.products.length]);\r\n\r\n  const renderProducts = state.products.map(\r\n    (product) => {\r\n      return (\r\n        <Grid className={classes.item} item xs={3} key={product._id}>\r\n          <Card product={product} />\r\n        </Grid>\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <CloudinaryContext cloudName=\"dfyamkucg\">\r\n      <Grid container className={classes.root}>\r\n        {renderProducts}\r\n      </Grid>\r\n    </CloudinaryContext>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"sourceRoot":""}